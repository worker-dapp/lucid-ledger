upstream backend_servers { server backend:5001; }
upstream frontend_servers { server frontend:5173; }

# Stage 1 (HTTP only): obtain certificates with webroot
server {
  listen 80;
  server_name lucidledger.co www.lucidledger.co;

  # ACME webroot for Let's Encrypt
  location /.well-known/acme-challenge/ { root /var/www/certbot; }

  # Backend API
  location /api/ {
    proxy_pass http://backend_servers;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Frontend (React)
  location / {
    proxy_pass http://frontend_servers;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# Stage 2 (HTTPS) to be enabled AFTER cert issuance:
# Uncomment and replace this server block when certs are present.
# server {
#   listen 80;
#   server_name lucidledger.co www.lucidledger.co;
#   location /.well-known/acme-challenge/ { root /var/www/certbot; }
#   return 301 https://$host$request_uri;
# }
# server {
#   listen 443 ssl http2;
#   server_name lucidledger.co www.lucidledger.co;
#   ssl_certificate /etc/letsencrypt/live/lucidledger.co/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/lucidledger.co/privkey.pem;
#   include /etc/letsencrypt/options-ssl-nginx.conf;
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#   location /api/ { proxy_pass http://backend_servers; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; }
#   location /     { proxy_pass http://frontend_servers; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; }
# }